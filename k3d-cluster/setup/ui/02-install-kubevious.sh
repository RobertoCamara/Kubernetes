#!/bin/bash
set -e

NAMESPACE="kubevious"
RELEASE_NAME="kubevious"
SERVICE_NAME="kubevious-ui-clusterip"
NODE_PORT=30082
LOCAL_PORT=8082

echo "üìÇ Verificando se o namespace '$NAMESPACE' existe..."
if ! kubectl get namespace "$NAMESPACE" &> /dev/null; then
  echo "üì¶ Criando namespace '$NAMESPACE'..."
  kubectl create namespace "$NAMESPACE"
else
  echo "‚úÖ Namespace '$NAMESPACE' j√° existe."
fi

echo "üì¶ Adicionando reposit√≥rio do Kubevious (se necess√°rio)..."
helm repo add kubevious https://helm.kubevious.io || true
helm repo update

echo "üîç Verificando se o release '$RELEASE_NAME' j√° est√° instalado..."
if ! helm status "$RELEASE_NAME" -n "$NAMESPACE" &> /dev/null; then
  echo "üöÄ Instalando Kubevious..."
  helm install "$RELEASE_NAME" kubevious/kubevious -n "$NAMESPACE" --wait
else
  echo "‚úÖ Kubevious j√° est√° instalado no namespace '$NAMESPACE'."
fi

echo "üîç Verificando se o Service '$SERVICE_NAME' existe..."
if ! kubectl get svc "$SERVICE_NAME" -n "$NAMESPACE" &> /dev/null; then
  echo "‚ùå Service '$SERVICE_NAME' n√£o encontrado. Verifique a instala√ß√£o do Kubevious."
  exit 1
fi

echo "üîß Alterando tipo do Service para NodePort e sobrescrevendo portas..."
kubectl patch svc "$SERVICE_NAME" -n "$NAMESPACE" --type='merge' -p "{
  \"spec\": {
    \"type\": \"NodePort\",
    \"ports\": [
      {
        \"name\": \"http\",
        \"port\": 4000,
        \"targetPort\": 4000,
        \"nodePort\": $NODE_PORT,
        \"protocol\": \"TCP\"
      }
    ]
  }
}"

echo ""
echo "‚úÖ Kubevious configurado com sucesso!"
echo "üîó Acesse a UI em: http://localhost:$LOCAL_PORT"
